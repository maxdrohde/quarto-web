---
title: RStudio IDE
description: | 
  Use RStudio v1.5 to work with Quarto documents that use either the 
  Knitr or Jupyter engine.
---

## Overview

The current [daily build](https://dailies.rstudio.com) of RStudio (v2021-07.0.275 or higher) includes support for editing and preview of Quarto documents. This works for plain markdown as well as both the Knitr and Jupyter engines.

If you are using Quarto within RStudio it is **strongly** recommended that you use this version (the documentation below assumes you are using this build).

You can download the RStudio daily build from <https://dailies.rstudio.com>.

### Creating Documents

Use the **File :** **New File : Quarto Doc...** command to create new Quarto documents:

![](images/new-quarto-doc.png){width="471" fig-alt="The 'New Quarto Document' dialog menu in RStudio. There is a border on top that is labeled 'New Quarto Document'. Underneath are fields for 'Title', 'Author', 'Format', 'Theme', 'Sections', and 'Engine'. There are buttons for 'Create' and 'Cancel' arranged side-by-side in the bottom right of the window. There is a question mark next to the the words 'About Quarto' in blue in the bottom left corner."}

### Render and Preview

Use the **Render** button to preview documents as you edit them:

![](images/rstudio-render.png){.border-bottom width="612" fig-alt="The top section of a qmd file as displayed in RStudio. There is a toolbar right above the document containing various options, including 'Render.' There is a stylized, segmented blue arrow pointing at the word."}

If you prefer to automatically render whenever you save you can check the **Render on Save** option on the editor toolbar.

The preview will appear alongside the editor:

![](images/rstudio-preview.png){.border fig-alt="An RStudio window. On the left half of the page is a Quarto document and the 'Jobs' pane open underneath that. There is messages in green text in the 'Jobs' pane that say: 'Watching files for changes. Browse at http://localhost:4064'. On the right half of the window is the Quarto output of the document on the left, as rendered by Knitr."}

The preview will update whenever you re-render the document. Side-by-side preview works for both HTML and PDF output.

## Projects

If you want to create a new project for a Quarto document or set of documents, use the **File : New Project...** command, specify **New Directory**, then choose **Quarto Project**:

![](images/rstudio-new-knitr-project.png){.border width="533" fig-alt="A section of the 'New Project Wizard' menu from Rstudio. This section is titled 'Create Quarto Project'. The Quarto logo is displayed on the left. ON the right are fields for 'Type', 'Directory name', and 'Create project as subdirectory of:'. Underneath that are options for 'Engine', 'Create a git repository', and 'Use renv with this project'. The option for 'Engine' is set to 'Knitr'. There are buttons for 'Create Project' and 'Cancel' arranged side-by-side in the bottom right of the window. There is an option to 'Open in new session' in the button left corner."}

You can use this UI to create both vanilla projects as well as [websites](../websites/website-basics.qmd) and [books](../books/book-basics.qmd). Options are also provided for creating a [git](https://git-scm.com/) repository and initializing an [renv](https://rstudio.github.io/renv/) environment for the project.

## Knitr Engine

Quarto is designed to be highly compatible with existing [R Markdown](https://rmarkdown.rstudio.com/) documents. You should generally be able to use Quarto to render any existing Rmd document without changes.

One important difference between R Markdown documents and Quarto documents is that in Quarto chunk options are typically included in special comments at the top of code chunks rather than within the line that begins the chunk. For example:

```` python
```{{r}}
#| echo: false
#| fig-cap: "Air Quality"

library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) + 
        geom_point() + 
        geom_smooth(method = "loess", se = FALSE)
```
````

Quarto uses this approach to both better accommodate longer options like `fig-cap`, `fig-subcap`, and `fig-alt` as well as to make it straightforward to edit chunk options within more structured editors that don't have an easy way to edit chunk metadata (e.g. most traditional notebook UIs).

::: callout-note
Note that if you prefer it is still possible to include chunk options on the first line (e.g. ```` ```{r, echo = FALSE} ````). That said, we recommend using the comment-based syntax to make documents more portable and consistent across execution engines.
:::

Chunk options included this way use YAML syntax rather than R syntax for consistency with options provided in YAML front matter. You can still however use R code for option values by prefacing them with `!expr`. For example:

``` r
#| fig-cap: !expr paste("Air", "Quality")
```

## Jupyter Engine

You can also work with Quarto markdown documents that target the Jupyter engine within RStudio. These files will typically include a `jupyter` option in the YAML front matter indicating which kernel to use. For example:

``` yaml
---
title: "Matplotlib Demo"
author: "Norah Smith"
jupyter: python3
---
```

If you want to work within a virtual environment ([venv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-environment)), use the **File :** **New Project...** command, specify the **Jupyter** engine with a venv, and specify which packages you'd like to seed the venv with:

![](images/rstudio-new-project.png){width="552" fig-alt="A section of the 'New Project Wizard' menu from Rstudio. This section is titled 'Create Quarto Project'. The Quarto logo is displayed on the left. ON the right are fields for 'Type', 'Directory name', and 'Create project as subdirectory of:'. Underneath that are options for 'Engine' and 'Kernel'. The option for 'Engine' is set to 'Jupyter,' and the option for 'Kernel' is set to 'Python 3'. Underneath these are options for 'Create a git repository', and 'Use venv with this project'. The button for 'Use venv...' is selected, and there is a text box to the right with the Python package names 'matplotlib' and 'pandas' filled in. There are buttons for 'Create Project' and 'Cancel' arranged side-by-side in the bottom right of the window. There is an option to 'Open in new session' in the button left corner."}

RStudio will automatically activate this virtual environment whenever you open the project. You can install additional Python packages into the environment using the RStudio **Terminal** tab. For example:

![](images/rstudio-pip-install.png){width="726" fig-alt="An RStudio terminal window. The prompt is prefixed by the word '(env)', indicating that this prompt is taking place in a Python virtual environment named 'env.' The first line is empty and the second line contains the command 'python3 -m pip install scikit-learn.'"}

## R Package

If you are not using RStudio and/or you prefer to render from the R console, you can do so using the **quarto** R package. To install the R package:

``` r
install.packages("quarto")
```

Then, to render a document:

``` r
library(quarto)
quarto_render("document.qmd")
```

To live preview (automatically render & refresh the browser on save) for a document you are working on, use the `quarto_preview()` function:

``` r
library(quarto)
quarto_preview("document.qmd")
```

If you are working on a [website](../websites/website-basics.qmd) or [book](../books/book-basics.qmd) project, you can run the Quarto development server with:

``` r
library(quarto)
quarto_serve()
```
